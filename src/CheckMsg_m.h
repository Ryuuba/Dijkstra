//
// Generated file, do not edit! Created by nedtool 5.6 from CheckMsg.msg.
//

#ifndef __CHECKMSG_M_H
#define __CHECKMSG_M_H

#if defined(__clang__)
#  pragma clang diagnostic ignored "-Wreserved-id-macro"
#endif
#include <omnetpp.h>

// nedtool version check
#define MSGC_VERSION 0x0506
#if (MSGC_VERSION!=OMNETPP_VERSION)
#    error Version mismatch! Probably this file was generated by an earlier version of nedtool: 'make clean' should help.
#endif



// cplusplus {{
  #include "Event.h"
// }}

/**
 * Class generated from <tt>CheckMsg.msg:5</tt> by nedtool.
 * <pre>
 * message CheckMsg
 * {
 *     name = "check";
 *     kind = EventKind::CHECK;
 *     bool updateStatus;
 *     int level;
 *     int cid;
 * }
 * </pre>
 */
class CheckMsg : public ::omnetpp::cMessage
{
  protected:
    bool updateStatus;
    int level;
    int cid;

  private:
    void copy(const CheckMsg& other);

  protected:
    // protected and unimplemented operator==(), to prevent accidental usage
    bool operator==(const CheckMsg&);

  public:
    CheckMsg(const char *name=nullptr, short kind=0);
    CheckMsg(const CheckMsg& other);
    virtual ~CheckMsg();
    CheckMsg& operator=(const CheckMsg& other);
    virtual CheckMsg *dup() const override {return new CheckMsg(*this);}
    virtual void parsimPack(omnetpp::cCommBuffer *b) const override;
    virtual void parsimUnpack(omnetpp::cCommBuffer *b) override;

    // field getter/setter methods
    virtual bool getUpdateStatus() const;
    virtual void setUpdateStatus(bool updateStatus);
    virtual int getLevel() const;
    virtual void setLevel(int level);
    virtual int getCid() const;
    virtual void setCid(int cid);
};

inline void doParsimPacking(omnetpp::cCommBuffer *b, const CheckMsg& obj) {obj.parsimPack(b);}
inline void doParsimUnpacking(omnetpp::cCommBuffer *b, CheckMsg& obj) {obj.parsimUnpack(b);}


#endif // ifndef __CHECKMSG_M_H

